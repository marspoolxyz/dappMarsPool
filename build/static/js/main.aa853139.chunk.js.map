{"version":3,"sources":["logo.svg","App.js","component/Benefits.js","component/Header.js","component/Footer.js","getWeb3.js","component/Claim.js","component/ProgressBar.js","component/Purchase.js","component/MainSale.js","component/NFT.js","component/SeedTokenUse.js","component/ArtSlider.js","component/VerifiedContract.js","component/SeedToken.js","component/Body.js","component/NFTSale.js","reportWebVitals.js","index.js"],"names":["App","Benefits","id","className","href","onClick","this","closeModal1","Component","Header","src","alt","Footer","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","console","log","web3","Web3","enable","provider","providers","HttpProvider","MakeItem","X","value","Claim","state","completed","loaded","ether","nft","pay","alertcss","warn","landBalance","seedBalance","lastClaim","property_name","maxsupply","ownerAddress","isOwner","newName","currentWallet","result","token_id","total_supply","progressStatusValue","componentDidMount","eth","net","getId","networkId","MarsPoolLand","networks","Contract","abi","SeedToken","getAccounts","accounts","methods","balanceOf","call","seedsBalance","setState","error","withDrawOwner","withdraw","send","from","data","harvestSeeds","harvest","props","tokenList","getBalance","handleNameChange","event","target","handleChange","changeName","tokenid","css","length","NewName","warnText","isLoggedIn","style","width","onChange","map","type","name","defaultValue","backgroundcolor","ProgressBar","bgcolor","fillerStyles","height","backgroundColor","borderRadius","textAlign","margin","padding","color","fontWeight","Purchase","balance","nctBalance","remaingPercentage","remainingNFT","tokens","tokenIndex","tokenNumber","walletConnected","getTotalSupply","changeLandBalance","getNFTPrice","interval","setInterval","getTokens","handleInputChange","checked","modifiedValue","newPrice","Math","round","parseInt","totalSupply","total_Supply","CurrentEther","currentPrice","utils","fromWei","on","receipt","getPastEvents","fromBlock","blockNumber","toBlock","errors","events","returnValues","catch","e","_completed","soldNFT","currentSupply","changeTotalSupply","tokenOfOwnerByIndex","_tokenIndex","concat","changeTokenList","Accountbalance","NCTBalance","NCT_Balance","changeSeedBalance","getPrice","requestedNFT","_total_supply","NFTBuyable","getSlotAvailable","getWalletConnected","location","reload","get_WalletConnected","getHomeNFT","buyAbleNFT","mintNFT","getClaim","lastClaimTime","SetNCTToken","setMasksAddress","clearInterval","MainSale","NFT","_seedBalance","_landBalance","_tokenList","walletAddress","bind","SeedTokenUse","ArtSlider","Body","openModal1","openModal2","openModal3","openModal4","openModal5","NFTSale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa853139.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\n\r\n\r\nclass Benefits extends Component {\r\n\r\n\r\n    closeModal1()\r\n    {\r\n        \r\n    }\r\n    closeModal2()\r\n    {\r\n        \r\n    }\r\n    closeModal3()\r\n    {\r\n        \r\n    }\r\n    closeModal4()\r\n    {\r\n        \r\n    }                \r\n    closeModal5()\r\n    {\r\n\r\n    }\r\n\r\n    render() {\r\n\t    return (\r\n            <div>\r\n                <div id=\"myModal\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">NFT Royalty</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal1\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">NFT Rental</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal2\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">NFT Royalty</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal3\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">Voting Power</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal4\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">Air Drops</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal5\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">Sell</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n                <div id=\"myModal6\" className=\"modal_book\">\r\n                <div className=\"modal-content\">\r\n                    <h1 className=\"\">Algorithmic Art</h1>\r\n                    <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. </p>\r\n                    <p>All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                    <div className=\"aligncenter\"><a href=\"#\" onClick={ this.closeModal1 }>Close</a></div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n    export default Benefits;            ","import React, {Component} from 'react';\r\nclass Header extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <header>\r\n            <div className=\"header_bot\">\r\n                <div className=\"wrapper\">\r\n                <div className=\"logo\"><a href=\"index.html\"><img src=\"images/logo.png\" alt=\"logo\" /></a></div>\r\n                <div className=\"menu_area\">\r\n                    <div id=\"navigation\">\r\n                    <div id=\"navbtn\">menu</div>\r\n                    <ul id=\"menu-nenu\" className=\"nav-menu\">\r\n                        <li><a href=\"#INTRO\">HOME</a></li>\r\n                        <li><a href=\"#BENEFITS\">BENEFITS</a></li>\r\n                        <li><a href=\"#GALLERY\">GALLERY</a></li>\r\n                        <li><a href=\"#SEED\">SEED TOKEN</a></li>\r\n                        <li><a href=\"#WALLET\">MY WALLET</a></li>\r\n                        <li><a href=\"#LIVE\">LIVE SALE</a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </header>            \r\n        </div>  \r\n\t     );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\nclass Footer extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <footer>\r\n            <div className=\"footer_content\">\r\n                <div className=\"wrapper\">\r\n                <div className=\"row row-xl-2 row-l-2 row-m-2 row-s-1\">\r\n                    <div className=\"col-xl-9 col-l-9 col-m-9 col-s-12\">\r\n                    <div className=\"footer_links\">\r\n                        <ul>\r\n                        <li><a href=\"#\">Terms and Conditions</a></li>\r\n                        <li><a href=\"#\">Grant Program</a></li>\r\n                        <li><a href=\"#\">Terms</a></li>\r\n                        <li><a href=\"#\">FAQ</a></li>\r\n                        <li><a href=\"#\">Contact Us</a></li>\r\n                        <li><a href=\"#\">Disclaimer</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"copyright_wrap\">\r\n                        <p>© 2021 MarsPool Labs</p>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-l-3 col-m-3 col-s-12\">\r\n                    <div className=\"footer_social\">\r\n                        <ul>\r\n                        <li><a href=\"#\"><img src=\"./images/fi-1.png\" alt=\"fi\"/></a></li>\r\n                        <li><a href=\"https://marspoolxyz.medium.com/\"><img src=\"./images/fi-2.png\" alt=\"fi\"/></a></li>\r\n                        <li><a href=\"https://twitter.com/MPoolxyz\"><img src=\"./images/fi-3.png\" alt=\"fi\"/></a></li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </footer>\r\n            </div>  \r\n\t     );\r\n    }\r\n}\r\nexport default Footer;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        console.log(\" Modern dapp browsers...\");\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          console.log(\" Request account access if needed...\");\n\n          await window.ethereum.enable();\n          console.log(\"Waiting for request\");\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, {Component,useEffect } from 'react';\r\nimport MarsPoolLand from \"../contracts/MarsPoolLand.json\";\r\nimport SeedToken from \"../contracts/SeedToken.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\n\r\n\r\nvar Data     = ['1', '2', '3', '4'],\r\nMakeItem = function(X) \r\n{\r\n    return <option value={X}>Token ID {X}</option>;\r\n};\r\n\r\n\r\n\r\n\r\nclass Claim extends Component {\r\n\r\n\r\n  \r\n\r\n    state = {completed:33, loaded:false, ether:0, nft:0,pay:0,\r\n        alertcss:\"\",warn:\"\",landBalance:0,seedBalance:0,lastClaim:0,\r\n        property_name:0,maxsupply:1786,\r\n        ownerAddress:\"0x532C787de8070DC4eD2A32232D599d86d788Ef55\",\r\n        isOwner:false,\r\n        newName:\"\",\r\n        currentWallet:\"\",\r\n        result:false,\r\n        value:0,\r\n       token_id:null,total_supply:0,progressStatusValue: 0,\r\n    };\r\n\r\n   \r\n\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n\r\n          // Get network provider and web3 instance.\r\n          this.web3 = await getWeb3();\r\n    \r\n          \r\n          var LandToken = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n          var Seed = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n\r\n          // Get the contract instance.\r\n          this.networkId = await this.web3.eth.net.getId();\r\n\r\n          let ownerAddress = this.state.ownerAddress;\r\n          if (this.networkId == 56)\r\n          {\r\n            // Binance Live\r\n            LandToken         = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n            Seed              = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n            ownerAddress      = \"0x532C787de8070DC4eD2A32232D599d86d788Ef55\";\r\n          }\r\n\r\n\r\n          const deployedNetwork = MarsPoolLand.networks[this.networkId];\r\n          this.MarsPoolLand = new this.web3.eth.Contract(\r\n            MarsPoolLand.abi,\r\n            \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\",\r\n          );\r\n    \r\n          this.SeedToken = new this.web3.eth.Contract(\r\n            SeedToken.abi,\r\n            \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\",\r\n          );\r\n    \r\n\r\n          // Use web3 to get the user's accounts.\r\n          this.accounts = await this.web3.eth.getAccounts();\r\n          \r\n          const landBalance = await this.MarsPoolLand.methods.balanceOf(this.accounts[0]).call();\r\n          const seedsBalance = await this.SeedToken.methods.balanceOf(this.accounts[0]).call();\r\n          \r\n\r\n          if(this.accounts[0] == ownerAddress)\r\n          {\r\n            this.state.isOwner = true;\r\n          }\r\n  \r\n    \r\n          // Set web3, accounts, and contract to the state, and then proceed with an\r\n          // example of interacting with the contract's methods.\r\n          this.setState({ \r\n            loaded:true,ether:0, \r\n            landBalance:landBalance,\r\n            seedsBalance:seedsBalance,\r\n            ownerAddress:ownerAddress,\r\n            currentWallet:this.accounts[0]});\r\n          console.log(this.state.currentWallet);\r\n        } catch (error) {\r\n          // Catch any errors for any of the above operations.\r\n          // alert(`Failed to load web3, accounts, or contract. Check console for details.`);\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n       \r\n\r\n      withDrawOwner = async() => {\r\n        const result = await this.MarsPoolLand.methods.withdraw().send({from : this.state.ownerAddress,value: 0, data: 0});\r\n      }\r\n\r\n      harvestSeeds = async() => {\r\n        \r\n        var currentPrice = 0;\r\n        try{\r\n    \r\n          //var token_id = this.state.token_id;\r\n          let token_id = 4;         \r\n          //console.log(\"harvestSeeds:\" + this.props.tokenList);\r\n          \r\n          {/*\r\n          const isOwner = await this.MarsPoolLand.methods.tokenOfOwnerByIndex(this.accounts[0],token_id).call(); \r\n          console.log(this.accounts[0]+ \"TEST \" + isOwner);  \r\n          if(isOwner < token_id)\r\n          {\r\n            var warnText = \"You are not the owner of the Token !\"\r\n            this.setState({warn:warnText});\r\n            return 0;\r\n          }\r\n          */}\r\n\r\n          this.setState({\r\n            warn:\"\",alertcss:\"\",\r\n          });          \r\n\r\n          //const result = await this.SeedToken.methods.harvest([token_id]).send({from : this.accounts[0],value: 0, data: 0});\r\n          const result = await this.SeedToken.methods.harvest(this.props.tokenList).send({from : this.accounts[0],value: 0, data: 0});\r\n          this.getBalance();\r\n           \r\n        }\r\n        catch(error)\r\n        {\r\n          console.log(\"There is an error\" + error);\r\n        }\r\n      }   \r\n\r\n      Greeting(props) {\r\n        const isLoggedIn = props.isLoggedIn;\r\n        if (isLoggedIn) {\r\n          return <h1>Please sign up.</h1>;\r\n        }\r\n        return <h1>Welcome back!</h1>;\r\n      }\r\n       \r\n      handleNameChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({ newName: event.target.value ,warn:\"\",alertcss:\"\"});\r\n      }\r\n      handleChange = (event) => {\r\n        const target = event.target;\r\n        this.setState({ token_id: event.target.value });\r\n      }\r\n\r\n      \r\n      changeName = async() => {\r\n        \r\n        let tokenid = this.state.token_id;\r\n        let warnText, css = \"\";\r\n        if( (this.state.token_id == null) && this.props.tokenList.length > 0)\r\n        {\r\n          tokenid = this.props.tokenList[0];\r\n        }\r\n\r\n        //console.log(\"New NAme = \" + this.state.newName + \"Toekn =\" + tokenid);\r\n        let NewName = this.state.newName;\r\n        let result = true;\r\n\r\n        if(NewName.length > 0)\r\n        {\r\n            const result = await this.MarsPoolLand.methods.changeName(tokenid,NewName).send({from : this.props.currentWallet,value: 0, data: 0});  \r\n        }\r\n        else\r\n        {\r\n          warnText = \"Give a name to your LAND Token \" + tokenid;\r\n          css = \"alart\";          \r\n        }\r\n\r\n        this.setState({\r\n          warn:warnText,alertcss:css,\r\n        });      \r\n        \r\n        \r\n\r\n      }      \r\n\r\n      \r\n\r\n      \r\n    render() {\r\n      const landToken = this.props.landBalance;\r\n      const tokenList = this.props.tokenList.length;\r\n\r\n\t    return (\r\n\t\t<div className=\"row\">\r\n            <div className=\"alart_box\">\r\n                <div className={this.state.alertcss}>{this.state.warn}</div>\r\n                <ul>\r\n                <li>You have {this.props.landBalance} LAND tokens and {this.props.seedBalance} SEED tokens<br/></li>\r\n                {this.props.landBalance > 0 ? (  \r\n                <li><select style={{width:\"140px\"}} onChange={this.handleChange}>{this.props.tokenList.map(MakeItem)}</select></li>\r\n                ):(<li></li>)}\r\n                \r\n\r\n                {(this.props.tokenList.length == this.props.landBalance && this.props.tokenList.length > 0) ? (\r\n                  <li className=\"num_right\">\r\n                    <input type=\"text\" className=\"aligncenter\" name=\"newname\" defaultValue=\"\" onChange={this.handleNameChange}/>\r\n                    <input style={{backgroundcolor: \"red\"}} className=\"btn\" type=\"submit\" value=\"Harvest SEEDs\"  onClick={ this.harvestSeeds } />\r\n                    <input style={{backgroundcolor: \"red\"}} className=\"btn\" type=\"submit\" value=\"CHANGE NAME\"  onClick={ this.changeName } />\r\n                  </li>\r\n                  ) : (\r\n                    <li>Loading {this.props.tokenList.length} LAND</li>\r\n                    \r\n                  )}                \r\n                \r\n                {this.state.isOwner == true ? (\r\n                  <li><a onClick={ this.withDrawOwner }>With Draw</a></li>\r\n\r\n                  ) : (\r\n                    <li></li>\r\n                  )}                \r\n                                \r\n                </ul>\r\n            </div>    \r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default Claim;","import React from \"react\";\r\n\r\nconst ProgressBar = (props) => {\r\n    const { bgcolor, completed } = props;\r\n\r\n    const containerStyles = {\r\n      height: 20,\r\n      width: '90%',\r\n      backgroundColor: \"#e0e0de\",\r\n      borderRadius: 50,\r\n      margin: 0\r\n    }\r\n  \r\n    const fillerStyles = {\r\n      height: '100%',\r\n      width: `${completed}%`,\r\n      backgroundColor: bgcolor,\r\n      borderRadius: 'inherit',\r\n      textAlign: 'right',\r\n    }\r\n    const fillerStyles2 = {\r\n      height: '100%',\r\n      width: '100%',\r\n      borderRadius: 'inherit',\r\n      textAlign: 'left'\r\n    }\r\n  \r\n    const labelStyles = {\r\n      padding: 5,\r\n      width:'100%',\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    }\r\n  \r\n    return (\r\n      <div id=\"container\" style={containerStyles}>\r\n        <div id=\"filler\" style={fillerStyles}>&nbsp;</div>\r\n          <div id=\"filler-1\" style={fillerStyles2}>\r\n          <span id=\"label\" style={labelStyles}>{`${completed}%`}</span>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProgressBar;","import React, {Component} from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport MarsPoolLand from \"../contracts/MarsPoolLand.json\";\r\nimport SeedToken from \"../contracts/SeedToken.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport Web3 from \"web3\";\r\n\r\n\r\n\r\nclass Purchase extends Component {\r\n\r\n    state = {completed:0, loaded:false, ether:0, nft:0,pay:0,\r\n        alertcss:\"\",warn:\"\",balance:0,nctBalance:0,lastClaim:0,\r\n        property_name:0,maxsupply:1786,\r\n        currentWallet:\"\",\r\n        value:0,remaingPercentage:0, remainingNFT:0,\r\n       token_id:null,total_supply:0,progressStatusValue: 0,\r\n       tokens:[],tokenIndex:0,tokenNumber:[],\r\n       walletConnected:false,\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n          // Get network provider and web3 instance.\r\n          this.web3 = await getWeb3();\r\n        \r\n          var LandToken = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n          var Seed      = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n\r\n          // Network ID 56 Main Chain\r\n          if(this.networkId == 56)\r\n          {\r\n            // Binance Live\r\n            LandToken         = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n            Seed              = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n          }\r\n\r\n          // Get the contract instance.\r\n          this.networkId = await this.web3.eth.net.getId();\r\n\r\n          // console.log(\"Network ID \" + this.networkId);\r\n          \r\n          const deployedNetwork = MarsPoolLand.networks[this.networkId];\r\n          this.MarsPoolLand = new this.web3.eth.Contract(\r\n            MarsPoolLand.abi,\r\n            \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\",\r\n          );\r\n    \r\n          this.SeedToken = new this.web3.eth.Contract(\r\n            SeedToken.abi,\r\n            \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\",\r\n          );\r\n    \r\n\r\n          // Use web3 to get the user's accounts.\r\n          this.accounts = await this.web3.eth.getAccounts();\r\n\r\n           this.getTotalSupply();\r\n            \r\n  \r\n           const landBalance = await this.MarsPoolLand.methods.balanceOf(this.accounts[0]).call();\r\n           const NCTBalance = await this.SeedToken.methods.balanceOf(this.accounts[0]).call();\r\n           this.changeLandBalance();        \r\n   \r\n    \r\n          // Set web3, accounts, and contract to the state, and then proceed with an\r\n          // example of interacting with the contract's methods.\r\n          this.setState({balance:landBalance, walletConnected:true,loaded:true,ether:0.1, currentWallet:this.accounts[0]});\r\n          // console.log(this.state.currentWallet);\r\n\r\n          this.getBalance();\r\n          this.getNFTPrice();\r\n\r\n          this.interval = setInterval(this.getBalance,2000);\r\n          this.interval = setInterval(this.getTokens, 2000);\r\n\r\n\r\n        } catch (error) {\r\n          // Catch any errors for any of the above operations.\r\n          //alert(`Failed to load web3, accounts, or contract. Check console for details.`,);\r\n          this.setState({\r\n            walletConnected:false,\r\n          });\r\n\r\n          console.error(error);\r\n        }\r\n      };\r\n    \r\n      \r\n      componentWillUnmount() {\r\n        // Clear the interval right before component unmount\r\n        clearInterval(this.interval);\r\n      }      \r\n\r\n \r\n      changeTotalSupply()\r\n      {\r\n         this.props.changeTotalSupply(this.state.completed);\r\n      }   \r\n            \r\n      changeLandBalance()\r\n      {\r\n         this.props.changeLandBalance(this.state.balance);\r\n      }     \r\n      \r\n      changeTokenList()\r\n      {\r\n         this.props.changeTokenList(this.state.tokenNumber);\r\n      }  \r\n\r\n      changeSeedBalance()\r\n      {\r\n         this.props.changeSeedBalance(this.state.nctBalance);\r\n         this.props.currentWallet(this.state.currentWallet);\r\n      }           \r\n\r\n      handleInputChange = (event) => {\r\n\r\n        const target = event.target;\r\n        const value  = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name   = target.name;\r\n        var modifiedValue = value;\r\n        // console.log(value);\r\n  \r\n        if(target.name == \"nft\")\r\n        {\r\n          var newPrice = value * this.state.ether;\r\n          var css,warnText = \"\";\r\n          \r\n          newPrice  = Math.round(newPrice * 100) / 100;\r\n    \r\n          if(value > 5)\r\n          {\r\n            warnText = \"Only 5 NFT's allowed per transaction ! \"\r\n            css = \"alart\";\r\n            modifiedValue = 5;\r\n            newPrice = 0;\r\n          }\r\n        }        \r\n        if(target.name == \"token_id\")\r\n        {\r\n          \r\n          this.getTotalSupply();\r\n  \r\n          // console.log(\"Token Supply \" + this.state.total_supply);\r\n          if(parseInt(modifiedValue) >= this.state.total_supply)\r\n          {\r\n            warnText = \"You are not the owner of the token ! \"\r\n            css = \"alart\";\r\n          }\r\n  \r\n        }\r\n        //console.log(\"Variable Name = \" + [name]); \r\n        this.setState({\r\n          [name]:modifiedValue, pay:newPrice,warn:warnText,alertcss:css,\r\n        });\r\n        \r\n        //console.log(this.state.token_id + \" modifiedValue = \" + modifiedValue);\r\n     }\r\n        \r\n\r\n      getNFTPrice = async() => {\r\n\r\n        const {nft, total_supply }  = this.state;\r\n        var css,warnText = \"\";\r\n        var css = \"\";\r\n    \r\n        const total_Supply = await this.MarsPoolLand.methods.totalSupply().call();\r\n    \r\n        var CurrentEther = 0.1;\r\n        // console.log(\"Line 146 \" + this.state.total_supply);\r\n        if(parseInt(this.state.total_supply) == parseInt(this.state.maxsupply))\r\n        {\r\n          CurrentEther = 0;\r\n        }\r\n    \r\n        // console.log(\"Line Number 150 \" + total_Supply + \"Max Supply = \" + this.state.maxsupply);\r\n        if(parseInt(total_Supply) == parseInt(this.state.maxsupply))\r\n        {\r\n           warnText = \"Sale has already ended !\";\r\n           css = \"alart\";\r\n           this.setState({\r\n            alertcss:css,warn:warnText,ether:CurrentEther,\r\n           }\r\n           );  \r\n           return 0;        \r\n        }      \r\n    \r\n        const result = await this.MarsPoolLand.methods.getNFTPrice().call();\r\n        var currentPrice = result;\r\n\r\n        currentPrice = this.web3.utils.fromWei(currentPrice,\"ether\");\r\n        if(currentPrice > 100)\r\n        {\r\n          currentPrice = 0;\r\n        }\r\n        this.setState({\r\n          ether : currentPrice\r\n        }\r\n        );\r\n       }\r\n    \r\n       withDrawOwner = async() => {\r\n    \r\n        var css,warnText  = \"\";\r\n        const result = await this.MarsPoolLand.methods.withdraw().send({from : this.accounts[0],value: 0, data: 1}).on(\"receipt\", (receipt) => {\r\n          \r\n    \r\n          // Transaction succeeded\r\n          this.MarsPoolLand.getPastEvents(\r\n              \"Transfer\", {\r\n                  fromBlock: receipt.blockNumber,\r\n                  toBlock: receipt.blockNumber\r\n              }, (errors, events) => {\r\n                  for (let event in events) {\r\n                      let returnValues = events[event].returnValues;\r\n                      // Now do something with the event\r\n                      // console.log(\"TEREER\" + returnValues);\r\n                  }\r\n              });\r\n    \r\n      }).catch(function (e) {\r\n          // Transaction rejected or failed\r\n          warnText = \"User cancelled the Transaction !\";\r\n          css = \"alart\";\r\n      });\r\n        var curentAmount = result;\r\n        //console.log(\"Amount Withdrawn \" + curentAmount);\r\n    \r\n        this.setState({alertcss:css,warn:warnText});\r\n       }\r\n    \r\n      getTotalSupply = async() => {\r\n        const total_Supply = await this.MarsPoolLand.methods.totalSupply().call();\r\n        // console.log(\"Line 406\" + total_Supply);\r\n        var _completed = (100 * parseInt(total_Supply))/1786;\r\n    \r\n        _completed  = Math.round(_completed * 100) / 100;\r\n\r\n        var currentSupply = total_Supply;\r\n        var remainingNFT = 0;\r\n        var remaingPercentage = 0;\r\n        var soldNFT  = 0;\r\n\r\n        if (currentSupply >= 1783) {\r\n            remainingNFT = 1786 - currentSupply;\r\n            soldNFT  = 3 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/3);\r\n        }\r\n        else if (currentSupply >= 1534) {\r\n            remainingNFT = 1786 - currentSupply; \t  // 1535 - 1785 (251) \t  4.0 BNB\r\n            soldNFT  = 251 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/251);\r\n        } else if (currentSupply >= 1215) {\r\n            remainingNFT = 1535 - currentSupply; \t  // 1216 - 1534 (319)\t\t3.0 BNB\r\n            soldNFT  = 319 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/319);\r\n        } else if (currentSupply >= 906) {\r\n            remainingNFT = 1216 - currentSupply;\t  // 907 - 1215 (309) \t  2.5 BNB\r\n            soldNFT  = 309 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/309);\r\n        } else if (currentSupply >= 617) {\r\n            remainingNFT = 907 - currentSupply;\t\t  // 618 - 906 (289)\t\t  2.0 BNB\r\n            soldNFT  = 289 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/289);\r\n        } else if (currentSupply >= 348) {\r\n            remainingNFT = 618 - currentSupply; \t\t// 349 - 617 (269) \t\t  1.5 BNB\r\n            soldNFT  = 269 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/269);\r\n        } else if (currentSupply >= 99) {\r\n            remainingNFT = 349 - currentSupply; \t\t// 100 - 348 (249)\t\t  1.0 BNB\r\n            soldNFT  = 249 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/249);\r\n        } else {\r\n            remainingNFT = 100 - currentSupply;\t\t  // 0 - 99 (100)\t\t\t    0.5 ETH \r\n            soldNFT  = 100 - remainingNFT;\r\n            remaingPercentage = (100 * parseInt(soldNFT)/100);\r\n        }\r\n    \r\n        remaingPercentage  = Math.round(remaingPercentage * 100) / 100;\r\n\r\n        if(remaingPercentage == 0)\r\n        {\r\n          this.getNFTPrice();\r\n        }\r\n\r\n\r\n        this.changeTotalSupply()\r\n\r\n        // console.log(\"Sold NFT \" + soldNFT + \" Remaining NFT \" + remainingNFT + \" The remainingNFT\" + remaingPercentage);\r\n        this.setState({\r\n            remainingNFT:remainingNFT,total_supply:total_Supply, completed:_completed,remaingPercentage:remaingPercentage,\r\n        });\r\n       }\r\n\r\n\r\n       getTokens = async() => {\r\n\r\n        if(this.state.tokenIndex < this.state.balance)  \r\n        {\r\n\r\n        // console.log(\"getTokens: Token List \" + this.state.tokens);\r\n        let _tokenIndex  = await this.MarsPoolLand.methods.tokenOfOwnerByIndex(this.accounts[0],this.state.tokenIndex).call();\r\n        \r\n        // console.log(\"getTokens: @ \" + this.state.tokenIndex +\" Token Number = \"  + _tokenIndex);\r\n        this.setState({\r\n          tokens:this.state.tokens.concat(this.state.tokenIndex),\r\n          tokenIndex:this.state.tokenIndex+1,\r\n          tokenNumber:this.state.tokenNumber.concat(_tokenIndex)\r\n        });        \r\n        this.changeTokenList();\r\n          \r\n       }        \r\n       // console.log(\"getTokens: Token Number \" + this.state.tokenNumber);\r\n       }\r\n\r\n       getBalance = async() => {\r\n\r\n        const Accountbalance = await this.MarsPoolLand.methods.balanceOf(this.accounts[0]).call();\r\n        const NCTBalance = await this.SeedToken.methods.balanceOf(this.accounts[0]).call();\r\n\r\n        this.getTotalSupply();\r\n    \r\n        var NCT_Balance  = this.web3.utils.fromWei(NCTBalance,\"ether\");\r\n    \r\n        NCT_Balance  = Math.round(NCT_Balance * 100) / 100;\r\n    \r\n        // console.log(NCT_Balance);\r\n        // console.log(\"Seed Token  Balance =\" + NCT_Balance);\r\n        // console.log(\"LAND Token Balance =\" + Accountbalance);\r\n    \r\n        this.setState({\r\n          balance : Accountbalance,\r\n          nctBalance : NCT_Balance\r\n        }\r\n        );\r\n\r\n        this.changeLandBalance();        \r\n        this.changeSeedBalance();        \r\n       }   \r\n    \r\n \r\n    \r\n       getPrice = async() => \r\n       {\r\n          const {nft, total_supply }  = this.state;\r\n          var css,warnText = \"\";\r\n    \r\n          // console.log(total_supply + \"Max Supply = \" + this.state.maxsupply);\r\n          if(parseInt(total_supply) == parseInt(this.state.maxsupply))\r\n          {\r\n             warnText = \"Sale has already ended !\";\r\n             css = \"alart\";\r\n             this.setState({\r\n               alertcss:css,\r\n               warn:warnText,\r\n             }\r\n             );  \r\n             return 0;        \r\n          }         \r\n          \r\n          var requestedNFT = parseInt(nft)  + parseInt(total_supply);\r\n    \r\n          // console.log(\"Current total_supply \" + total_supply + \" Current nft \" + nft);\r\n    \r\n          // console.log(\"Number of NFT requested \" + requestedNFT);\r\n          \r\n          var currentSupply = requestedNFT;\r\n          var price = 0;\r\n          var conflict = false;\r\n    \r\n          var _total_supply = parseInt(total_supply) + parseInt(nft);\r\n     \r\n          var  NFTBuyable = parseInt(nft);\r\n          var priceChangeRange = 0;\r\n\r\n          if(parseInt(total_supply) >= 1786)\r\n            NFTBuyable = 0;\r\n          \r\n    \r\n          if (_total_supply >= 1782 && _total_supply <= 1786) \r\n          {\r\n            NFTBuyable = 1785 - parseInt(total_supply);\r\n            conflict = true;\r\n          } \r\n          else if (_total_supply >= 1534 && _total_supply < 1539)\r\n          {\r\n            NFTBuyable = 1533 - parseInt(total_supply); \r\n            conflict = true;\r\n          }\r\n          else if (_total_supply >= 1217 && _total_supply < 1220) \r\n          {\r\n            NFTBuyable = 1216 - parseInt(total_supply);\r\n            conflict = true;\r\n          }\r\n          else if (_total_supply >= 908 && _total_supply < 911) \r\n          {\r\n            NFTBuyable = 907 - parseInt(total_supply);\r\n    \r\n            conflict = true;\r\n          } \r\n          else if (_total_supply >= 619 && _total_supply < 622) \r\n          {\r\n            NFTBuyable = 618 - parseInt(total_supply);\r\n            conflict = true;\r\n          }\r\n          else if (_total_supply >= 350 && _total_supply < 353) \r\n          {\r\n\r\n            NFTBuyable = 349 - parseInt(total_supply);\r\n    \r\n            conflict = true;\r\n          } \r\n          else if (_total_supply >= 100 && _total_supply < 104) \r\n          {\r\n            conflict = true;\r\n            NFTBuyable = 100 - parseInt(total_supply); // This should be 100\r\n          }\r\n          else \r\n          {\r\n            conflict = false;\r\n          }\r\n          // console.log(\"total_supply = \" + total_supply + \"_total_supply_ = \" + _total_supply + \"Conflict Check = \" + conflict + \" Price = \" + priceChangeRange + \" NFTBuyable \"+NFTBuyable);\r\n    \r\n          if(NFTBuyable == 0)\r\n          {\r\n            NFTBuyable = nft;\r\n          }\r\n          // console.log(\"Buyable NFT\" + NFTBuyable);\r\n\r\n          if(this.state.remainingNFT <= 5 && NFTBuyable > this.state.remainingNFT)\r\n          {\r\n             NFTBuyable = this.state.remainingNFT; \r\n          }\r\n          \r\n    \r\n          this.setState({ nft : NFTBuyable});\r\n       }\r\n\r\n       getSlotAvailable = async() => {\r\n\r\n        var css,warnText = \"\";\r\n        const {nft, total_supply ,maxsupply}  = this.state;\r\n       }\r\n\r\n       getWalletConnected = async() =>  {\r\n        if (window.ethereum) {\r\n          console.log(\" Modern dapp browsers...\");\r\n          const web3 = new Web3(window.ethereum);\r\n          try {\r\n            // Request account access if needed\r\n            console.log(\" Request account access if needed...\");\r\n  \r\n            await window.ethereum.enable();\r\n            console.log(\"Waiting for request\");\r\n            window.location.reload(false);\r\n\r\n            \r\n            // this.get_WalletConnected();\r\n            // Get the contract instance.\r\n            try {\r\n              console.log(this.web3);\r\n            this.networkId = await this.web3.eth.net.getId();            \r\n            }\r\n            catch(error)\r\n            {\r\n              console.log(error);\r\n            }\r\n\r\n            this.setState({walletConnected:true});\r\n            \r\n\r\n\r\n           } catch (error) {\r\n            let warnText = \"User rejected the request to connect the wallet !\";\r\n            var css = \"alart\";\r\n            this.setState({\r\n             alertcss:css, \r\n             warn:warnText,\r\n            }\r\n            );\r\n            \r\n          }\r\n        }\r\n       }\r\n\r\n       getWeb3 = () =>\r\n       new Promise((resolve, reject) => {\r\n         // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n         window.addEventListener(\"load\", async () => {\r\n           // Modern dapp browsers...\r\n           if (window.ethereum) {\r\n             console.log(\" Modern dapp browsers...\");\r\n             const web3 = new Web3(window.ethereum);\r\n             try {\r\n               // Request account access if needed\r\n               console.log(\" Request account access if needed...\");\r\n     \r\n               await window.ethereum.enable();\r\n               console.log(\"Waiting for request\");\r\n               // Acccounts now exposed\r\n               resolve(web3);\r\n             } catch (error) {\r\n               reject(error);\r\n             }\r\n           }\r\n           // Legacy dapp browsers...\r\n           else if (window.web3) {\r\n             // Use Mist/MetaMask's provider.\r\n             const web3 = window.web3;\r\n             console.log(\"Injected web3 detected.\");\r\n             resolve(web3);\r\n           }\r\n           // Fallback to localhost; use dev console port by default...\r\n           else {\r\n             const provider = new Web3.providers.HttpProvider(\r\n               \"http://127.0.0.1:8545\"\r\n             );\r\n             const web3 = new Web3(provider);\r\n             console.log(\"No web3 instance injected, using Local web3.\");\r\n             resolve(web3);\r\n           }\r\n         });\r\n       });       \r\n\r\n       get_WalletConnected = async() =>  {\r\n \r\n\r\n        var LandToken = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n        var Seed      = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n\r\n        // Network ID 56 Main Chain\r\n        if(this.networkId == 56)\r\n        {\r\n          // Binance Live\r\n          LandToken         = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n          Seed              = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n        }        \r\n\r\n        // Get the contract instance.\r\n        this.networkId = await this.web3.eth.net.getId();\r\n\r\n        // Network ID 56 Main Chain\r\n        if(this.networkId == 56)\r\n        {\r\n          LandToken = \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\";\r\n          Seed      = \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\";\r\n        }\r\n              \r\n        const deployedNetwork = MarsPoolLand.networks[this.networkId];\r\n        this.MarsPoolLand = new this.web3.eth.Contract(\r\n          MarsPoolLand.abi,\r\n          \"0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78\",\r\n      );\r\n  \r\n        this.SeedToken = new this.web3.eth.Contract(\r\n          SeedToken.abi,\r\n          \"0x650C06a9cD1A74011c6fd5D4e4400c27252cE274\",\r\n        );\r\n  \r\n\r\n        // Use web3 to get the user's accounts.\r\n        this.accounts = await this.web3.eth.getAccounts();\r\n\r\n         this.getTotalSupply();\r\n          \r\n\r\n         const landBalance = await this.MarsPoolLand.methods.balanceOf(this.accounts[0]).call();\r\n         const NCTBalance = await this.SeedToken.methods.balanceOf(this.accounts[0]).call();\r\n         this.changeLandBalance();        \r\n \r\n  \r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n        // example of interacting with the contract's methods.\r\n        this.setState({balance:landBalance, walletConnected:true,loaded:true,ether:0.1, currentWallet:this.accounts[0]});\r\n        //console.log(this.state.currentWallet);\r\n\r\n        this.getBalance();\r\n        this.getNFTPrice();\r\n\r\n        this.interval = setInterval(this.getBalance,2000);\r\n        this.interval = setInterval(this.getTokens, 2000);        \r\n       }        \r\n \r\n       getHomeNFT = async() => {\r\n\r\n        var css,warnText = \"\";\r\n        const {nft, total_supply ,maxsupply}  = this.state;\r\n    \r\n    \r\n        console.log(total_supply + \"Max Supply = \" + maxsupply + \" Account \" + this.accounts[0]);\r\n        if(parseInt(total_supply) == parseInt(maxsupply))\r\n        {\r\n           warnText = \"Sale has already ended !\";\r\n           css = \"alart\";\r\n           this.setState({\r\n            alertcss:css, \r\n            warn:warnText,\r\n           }\r\n           );  \r\n           return 0;        \r\n        }      \r\n       \r\n         this.getPrice();\r\n    \r\n         var currentPrice = 0;\r\n         var result = await this.MarsPoolLand.methods.getNFTPrice().call();\r\n         currentPrice = result;\r\n         var buyAbleNFT = this.state.nft;\r\n    \r\n         if(parseInt(this.state.nft) == 0)\r\n         {\r\n            result = this.state.ether;\r\n            warnText = \"NFT numbers cannot be zero !\";\r\n            css = \"alart\";\r\n            this.setState({\r\n              ether : result, warn:warnText,alertcss:css,\r\n            }\r\n            );  \r\n            return 0;        \r\n         }\r\n       \r\n         \r\n    \r\n         console.log(\"Current Price = \" + currentPrice + \" NFT\" + buyAbleNFT);\r\n    \r\n         currentPrice = currentPrice * buyAbleNFT;\r\n         try{\r\n                  await this.MarsPoolLand.methods.mintNFT(buyAbleNFT).send({from : this.accounts[0],value: currentPrice, data: 1}).on(\"receipt\", (receipt) => {\r\n    \r\n                  // Transaction succeeded\r\n                  this.MarsPoolLand.getPastEvents(\r\n                      \"Transfer\", {\r\n                          fromBlock: receipt.blockNumber,\r\n                          toBlock: receipt.blockNumber\r\n                      }, (errors, events) => {\r\n                          for (let event in events) {\r\n                              let returnValues = events[event].returnValues;\r\n                              // Now do something with the event\r\n                              // console.log(\"TEREER\" + returnValues);\r\n                          }\r\n                      });\r\n    \r\n              }).catch(function (e) {\r\n                  // Transaction rejected or failed\r\n                  warnText = \"User cancelled the Transaction !\";\r\n                  css = \"alart\";\r\n              });\r\n    \r\n          }\r\n          catch(err)\r\n          {\r\n            console.log(err);\r\n          }\r\n    \r\n         this.getBalance();\r\n    \r\n         result = this.web3.utils.fromWei(result,\"ether\");\r\n    \r\n         this.setState({\r\n          ether : result, warn:warnText,alertcss:css,\r\n        }\r\n        );     \r\n    \r\n       }\r\n\r\n       getClaim = async() => {\r\n        //const { nft, ether} = this.state;\r\n        // console.log(\"Claim Time Price = \" );\r\n    \r\n        var lastClaimTime = 0;\r\n        const result = await this.SeedToken.methods.lastClaim(1).call();\r\n        lastClaimTime = result;\r\n        // console.log(\"Claim Time Price = \" + lastClaimTime );\r\n    \r\n        this.setState({\r\n          lastClaim:lastClaimTime\r\n        });\r\n      }   \r\n      \r\n      SetNCTToken = async() => {\r\n\r\n        try{\r\n    \r\n          var LandToken = \"0x6C0CCD74e18D67a7F03B8fb17eB668ebC5C17fDD\";\r\n          const result = await this.SeedToken.methods.setMasksAddress(LandToken).send({from : this.accounts[0],value: 0, data: 0});\r\n          // console.log(\"0x6C0CCD74e18D67a7F03B8fb17eB668ebC5C17fDD\" + result);\r\n    \r\n        }\r\n        catch(error)\r\n        {\r\n          // console.log(\"There is an error\");\r\n        }\r\n        \r\n        \r\n      }   \r\n\r\n      harvestSeeds = async() => {\r\n    \r\n        try{\r\n    \r\n          var token_id = this.state.token_id;\r\n          token_id = 200;\r\n           \r\n          const isOwner = await this.MarsPoolLand.methods.tokenOfOwnerByIndex(this.accounts[0],token_id).call(); \r\n          if(isOwner < token_id)\r\n          {\r\n            var warnText = \"You are not the owner of the Token !\"\r\n            this.setState({warn:warnText});\r\n            return 0;\r\n          }\r\n          await this.SeedToken.methods.harvest([token_id]).send({from : this.accounts[0],value: 0, data: 0});\r\n    \r\n          this.getBalance();\r\n           \r\n        }\r\n        catch(error)\r\n        {\r\n          console.log(error);\r\n        }\r\n        \r\n      }   \r\n    \r\n     \r\n    \r\n\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <div className=\"alart_box\">\r\n                <div className={this.state.alertcss}>{this.state.warn}</div>\r\n                <div className=\"number_area\">\r\n                  \r\n                <div className=\"num_left\" id=\"WALLET\">\r\n                    <p>Wallet Address <small className=\"colorwhite\">{this.state.currentWallet}</small></p>\r\n                </div>\r\n                \r\n                    <a name=\"BUY\"></a>\r\n                    {this.state.ether == 0 ? (\r\n                          <div className=\"aligncenter\">\r\n                            <br/>\r\n                            \r\n                          </div>\r\n                         ) : (\r\n                           <div>\r\n                          <div className=\"num_left\" id=\"BUY\">\r\n                                  <p>Number of LAND Tokens</p>\r\n                              </div>\r\n                              <div className=\"num_right\">\r\n                                  {\r\n                                  this.state.walletConnected == false ? (\r\n                                      <input type=\"submit\" value=\"Connect\" className=\"btn\" onClick={ this.getWalletConnected } />\r\n                                    ) : (\r\n                                      <div>\r\n                                        <input type=\"text\" className=\"aligncenter\" name=\"nft\" defaultValue=\"0\" onChange={this.handleInputChange } />\r\n                                        <input type=\"submit\" value=\"Buy\" className=\"btn\" onClick={ this.getHomeNFT } />\r\n                                      </div>\r\n                                  )}                      \r\n                              </div>\r\n\r\n                          </div>\r\n                         )}  \r\n\r\n                  \r\n                </div>\r\n                <div className=\"smallbar\"> \r\n                    <p>{this.state.remainingNFT} LAND Tokens available at BNB {this.state.ether} </p>\r\n                    <ProgressBar key=\"1\" className=\"smallbar\" bgcolor=\"#e77d11\" completed={this.state.remaingPercentage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default Purchase;","import React, {Component} from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nclass MainSale extends Component {\r\n\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <div  id=\"LIVE\">\r\n                <h2 className=\"gap-small\">Live Sale</h2>\r\n            </div>               \r\n            <div className=\"value_box\">\r\n            <div className=\"row row-xl-3 row-l-3 row-m-3 row-s-3\">\r\n            <div className=\"col-xl-3 col-l-3 col-m-2 col-s-1\">&nbsp;</div>\r\n            <div className=\"col-xl-6 col-l-6 col-m-8 col-s-10 aligncenter\">\r\n                <h5>Lives on digital art and collectibles with a value hierarchy <span>(Record and Proof)</span>.</h5>\r\n            </div>\r\n            <div className=\"col-xl-3 col-l-3 col-m-2 col-s-1\">&nbsp;</div>\r\n            </div>\r\n            <div className=\"progressbar\">\r\n                <ProgressBar key=\"1\" className=\"smallbar\" bgcolor=\"#c1440e\" completed={this.props.totalSupply} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default MainSale;","import React, {Component, useState} from 'react';\r\nimport Claim from './Claim';\r\nimport Purchase from './Purchase';\r\nimport MainSale from './MainSale';\r\n\r\nclass NFT extends Component {\r\n\r\n    state = {currentWallet:\"\",completed:0,landBalance:0,seedBalance:0,tokenList:[]};\r\n\r\n\r\n    changeSeedBalance(_seedBalance)\r\n    {\r\n        console.log(\"seedBalance value\" + _seedBalance);\r\n        this.setState({\r\n            seedBalance: _seedBalance\r\n        });\r\n    }\r\n\r\n    changeLandBalance(_landBalance)\r\n    {\r\n        console.log(\"Modified value\" + _landBalance);\r\n        this.setState({\r\n            landBalance: _landBalance\r\n        });\r\n    }\r\n\r\n    changeTokenList(_tokenList)\r\n    {\r\n        console.log(\"Token List:\" + _tokenList);\r\n        this.setState({\r\n            tokenList: _tokenList\r\n        });\r\n    }\r\n    \r\n    changeTotalSupply(totalSupply)\r\n    {\r\n        console.log(\"Modified value\" + totalSupply);\r\n        this.setState({\r\n            completed: totalSupply\r\n        });\r\n    }\r\n\r\n    currentWallet(walletAddress)\r\n    {\r\n        this.setState({\r\n            currentWallet: walletAddress\r\n        });        \r\n    }\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n                <MainSale totalSupply={this.state.completed}/>\r\n                <div className=\"row row-xl-2 row-l-2 row-m-1\">\r\n                    <div className=\"col-xl-6 col-l-6 col-m-12\">\r\n                        <Purchase \r\n                        changeTotalSupply={this.changeTotalSupply.bind(this)}\r\n                        changeLandBalance={this.changeLandBalance.bind(this)}\r\n                        changeSeedBalance={this.changeSeedBalance.bind(this)}\r\n                        changeTokenList={this.changeTokenList.bind(this)}\r\n                        currentWallet={this.currentWallet.bind(this)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-l-6 col-m-12\">\r\n                        <Claim \r\n                        landBalance={this.state.landBalance}\r\n                        seedBalance={this.state.seedBalance}\r\n                        tokenList={this.state.tokenList}\r\n                        currentWallet={this.state.currentWallet}\r\n                        />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default NFT;","import React, {Component} from 'react';\r\nclass SeedTokenUse extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <div className=\"gap-top\">\r\n                <h2 className=\"gap-small\" id=\"SEED\">SEED Token</h2>\r\n                <p>SEED Tokens are harvested by LAND Token owners on daily basis. There will be 1786 \r\n                    LAND owners harvesting 10 SEEDs every day for the next 60 months starting from \r\n                    the LAND Sale date.\r\n                </p>\r\n                <p>\r\n                    SEED Tokens play a vital role in the ecosystem, as the project owners, \r\n                    who are willing to raise funds from the MarsPool community need to acquire SEEDs and burn \r\n                    them to list the project. As more and more projects get attention to the MarsPool community\r\n                    SEEDs will be scarce as SEEDs are burnt and can be harvested only by the NFT LAND Owners.                    \r\n                </p>\r\n                \r\n                <p> \r\n                    SEEDs can be used to register the LAND owner's name in the block-chain, \r\n                    meaning when MarsPool LAND token owner wants to give a name to his/her LAND token,\r\n                    there is a cost associated with registering the unique name to LAND. SEEDs send to the \r\n                    name registration contract shall be burnt, which reduces the total supply of the SEEDs token \r\n                    at a given point of time. SEEDs can only be harvested by (NFT) LAND token owners.                    \r\n                </p>\r\n            </div>   \r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default SeedTokenUse;","import React, {Component} from 'react';\r\nimport SeedTokenUse from './SeedTokenUse';\r\n\r\nclass ArtSlider extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n                <SeedTokenUse/>\r\n                <div  id=\"GALLERY\">\r\n                    <h2 className=\"gap-small\">Gallery</h2>\r\n                </div>                   \r\n                <div className=\"weav_area\"  id=\"GALLERY\">\r\n                    <div className=\"owl-carousel owl-theme\" id=\"owl-one\">\r\n                    <div className=\"item\"><img src=\"images/8707.png\" alt=\"round\" /></div>\r\n                    <div className=\"item\"><img src=\"images/5274.png\" alt=\"round\" /></div>\r\n                    <div className=\"item\"><img src=\"images/round.png\" alt=\"round\" /></div>\r\n                    <div className=\"item\"><img src=\"images/green-2331.png\" alt=\"round\" /></div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default ArtSlider;","import React, {Component} from 'react';\r\nclass Contract extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n                <div className=\"value_box\">\r\n                    <div className=\"row row-xl-3 row-l-3 row-m-3 row-s-3 gap-small\">\r\n                    <div className=\"col-xl-2 col-l-2 col-m-1 col-s-1\">&nbsp;</div>\r\n                    <div className=\"col-xl-8 col-l-8 col-m-10 col-s-10 \">\r\n                        <h4>MarsPool SMART CONTRACTS</h4>\r\n                        <p>MARSPOOL LAND Contract: 0x11a3Ec08663D5E7112e2ba21d7DC83c697802B78</p>\r\n                        <p>SEED Token Contract: 0x650C06a9cD1A74011c6fd5D4e4400c27252cE274</p>\r\n                    </div>\r\n                    <div className=\"col-xl-2 col-l-2 col-m-1 col-s-1\">&nbsp;</div>\r\n                    </div>\r\n                </div>\r\n                \r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default Contract;","import React, {Component} from 'react';\r\nclass SeedToken extends Component {\r\n    render() {\r\n\t    return (\r\n\t\t<div className=\"row \">\r\n            <div className=\"gap-top\">\r\n                <div className=\"about_txt\">\r\n                 </div>\r\n                <h2 className=\"gap-small\" id=\"INTRO\">Introducing LAND NFT Token</h2>\r\n                    <div>\r\n                    <h6>LAND NFT Token with distinct use-case to the owners</h6>\r\n                    </div>\r\n                    <p>In MarsPool, the LAND token is an NFT token that contains lots of rewards for the owners.\r\n                    Initial investors have a life-long 20% royalty on rewards even after NFT is sold. \r\n                    LAND an NFT token is sellable in the secondary market, rentable in block-chain. \r\n                    Gives power to the owners to vote on community decisions. \r\n                    LAND an NFT token gets rewarded with SEED tokens, which fuels the launch-pad economy. \r\n                    By owning LAND tokens the owner of the token is part of the MarsPool Project and shares the \r\n                    goodness of the projects.\r\n                    \r\n                    </p>\r\n\r\n                    <p>The LAND token enables anyone to become Marspool's initial investor community. \r\n                    Each LAND token is associated with a unique algorithmic art generated that lives in the \r\n                    blockchain with a record and proof of ownership. The algorithmic art is generatable. \r\n                    The LAND token is rentable, tenant and LAND owner share the rewards in a 90:10 ratio. \r\n                    Governed in the blockchain. LAND token owners have various advantages listed below.\r\n                    </p>\r\n                    <a href=\"#BUY\" className=\"btn\">ON SALE</a> \r\n\r\n            </div>\r\n        </div>\r\n        );\r\n        }\r\n    }\r\nexport default SeedToken;","import React, { Component} from 'react';\r\nimport NFT from './NFT';\r\nimport ArtSlider from './ArtSlider';\r\nimport Contract from './VerifiedContract';\r\nimport SeedToken from './SeedToken';\r\n\r\nclass Body extends Component {\r\n\r\n\r\n    openModal1() {\r\n     \r\n    }\r\n\r\n    openModal2() {\r\n     \r\n    }\r\n\r\n    openModal3() {\r\n     \r\n    }\r\n    \r\n    openModal4() {\r\n     \r\n    }\r\n    openModal5() {\r\n     \r\n    }        \r\n\r\n    render() {\r\n\r\n\t    return (\r\n\t\t<div className=\"row\">\r\n            <div className=\"main_wrap\">\r\n            <div className=\"content_wrapper bg-black\">\r\n                <div className=\"wrapper\">\r\n                <SeedToken/>\r\n                <div  id=\"BENEFITS\">\r\n                    <h2 className=\"gap-small\">Benefits</h2>\r\n                </div>                   \r\n                <div className=\"row row-xl-3 row-l-3 row-m-2 row-s-2 work_area\">\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-1.png\" alt=\"NFT Rental\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h6><a href=\"#\" onClick={ this.openModal1 }>NFT Rental</a></h6>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-2.png\" alt=\"NFT Royalty\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h5><a href=\"#\" onClick={ this.openModal2 }>NFT Royalty</a></h5>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-3.png\" alt=\"Voting Power\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h5><a href=\"#\" onClick={ this.openModal3 }>Voting Power</a></h5>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-4.png\" alt=\"Air Drops\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h6><a href=\"#\" onClick={ this.openModal4 }>Air Drops</a></h6>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-5.png\" alt=\"Sell\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h5><a href=\"#\" onClick={ this.openModal5 }>Sell</a></h5>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-l-4 col-m-6 col-s-6\">\r\n                    <div className=\"work_box\">\r\n                        <div className=\"work_img\"><img src=\"images/cat-6.png\" alt=\"Algorithmic Art\" /></div>\r\n                        <div className=\"work_txt\">\r\n                        <h5><a href=\"#\" onClick={ this.openModal5 }>Algorithmic Art</a></h5>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <NFT></NFT>\r\n                <ArtSlider/>\r\n                <Contract/>\r\n                </div>      \r\n            </div>\r\n            </div>           \r\n         </div>  \r\n\t     );\r\n    }\r\n}\r\nexport default Body;","import React, {Component} from 'react';\r\nimport Benefits from './Benefits';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Body from './Body';\r\n\r\n\r\nclass NFTSale extends Component {\r\n    \r\n\r\n    render() {\r\n\t    return (\r\n                <div>\r\n                <Header/>\r\n                <Body/>\r\n                <Footer/>\r\n                <Benefits/>\r\n                </div>\r\n\t     );\r\n    }\r\n}\r\nexport default NFTSale;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NFTSale from './component/NFTSale';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NFTSale />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}